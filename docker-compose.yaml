version: "3.7"

services:
  db-consents:
    # Use postgres 11.7 image to match stable postgres-client debian
    image: "postgres:11.7-alpine"
    container_name: db-consents
    environment:
      POSTGRES_DB: ${CONSENTS_POSTGRES_DB}
      POSTGRES_USER: ${CONSENTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSENTS_POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - consents-db-data:/var/lib/postgresql/data/
  consents:
    build:
      context: ${CONSENTS_DIR}
      dockerfile: ./docker/test.Dockerfile
      target: consents
      args:
        - API_PATH=${CONSENTS_PROJECT_ROOT}/consents-service/api 
        - SWAGGERFILE=${CONSENTS_PROJECT_ROOT}/swagger.yaml   
    container_name: consents
    environment:
      POSTGRES_DB: ${CONSENTS_POSTGRES_DB}
      POSTGRES_USER: ${CONSENTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSENTS_POSTGRES_PASSWORD}
      POSTGRES_HOST: "db-consents"
      POSTGRES_PORT: 5432
      GOPATH: ${GOPATH}
      APP_PATH: ${CONSENTS_PROJECT_ROOT}/consents-service
    depends_on:
      - db-consents
    ports:
      - "3005:3005"

  pp-keycloak:
    image: quay.io/keycloak/keycloak:11.0.2
    container_name: pp-keycloak
    environment:
      KEYCLOAK_USER: ${PP_KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${PP_KEYCLOAK_PASSWORD}
    ports:
      - "8080:8080"
  pp-react:
    build:
      context: ${PARTICIPANT_PORTAL_REACT_DIR}
    container_name: pp-react
    ports:
      - "3003:3000"
    volumes:
      - ${PARTICIPANT_PORTAL_REACT_DIR}:/app
      - /app/node_modules

  db-rems:
    image: postgres:9.6
    container_name: db-rems
    environment:
      POSTGRES_USER: ${REMS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${REMS_POSTGRES_PASSWORD}
    mem_reservation: 30m
    mem_limit: 150m
    ports:
      - "5433:5432"
    volumes:
      - rems-db-data:/var/lib/postgresql/data
  rems:
    image: cscfi/rems
    container_name: rems
    environment:
      PORT: 3000
      DATABASE_URL: "postgresql://db-rems:5432/rems?user=${REMS_POSTGRES_USER}&password=${REMS_POSTGRES_PASSWORD}"
      PUBLIC_URL: "http://localhost:3001/"
      OIDC_METADATA_URL: "http://rp-keycloak:8080/auth/realms/dycons-researcher-idp/.well-known/openid-configuration"
      OIDC_CLIENT_ID: "rems-client"
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
      # ENTITLEMENTS_TARGET__ADD: "http://consents:3005/v0/rems/add_entitlements"
    mem_reservation: 200m
    mem_limit: 500m
    ports:
      - "3001:3000"
    volumes:
      - ./services/rems/simple-config.edn:/rems/config/config.edn
      - ./services/rems/public_key:/rems/public_key
      - ./services/rems/private_key:/rems/private_key
    depends_on:
      - db-rems
    
  rp-keycloak:
    image: quay.io/keycloak/keycloak:11.0.2
    container_name: rp-keycloak
    environment:
      KEYCLOAK_USER: ${RP_KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${RP_KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: "/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled"
      REMS_CLIENT_ID: ${REMS_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
    ports:
      - "3002:8080"
    volumes:
      - ./services/keycloak/rp-keycloak.realm-export.json:/imports/realm-export.json
  rp-react:
    build:
      context: ${RESEARCHER_PORTAL_REACT_DIR}
    container_name: rp-react
    ports:
      - "3004:3000"
    volumes:
      - ${RESEARCHER_PORTAL_REACT_DIR}:/app
      - /app/node_modules
    environment:
      REACT_APP_REMS_OWNER_ID: ${REMS_OWNER_ID}

  db-katsu:
    image: postgres:latest
    container_name: db-katsu
    environment:
      POSTGRES_DB: ${KATSU_POSTGRES_DB}
      POSTGRES_USER: ${KATSU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KATSU_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - katsu-db-data:/var/lib/postgresql/data
  katsu:
    image: ghcr.io/candig/candig-katsu:latest
    container_name: katsu
    volumes:
      - ./services/katsu/katsu_entrypoint.sh:/app/katsu_entrypoint.sh
      - ./services/katsu/ingest.conf.json:/app/chord_metadata_service/scripts/ingest.conf.json
      - ./services/katsu/cancogen_phenopackets.json:/app/cancogen_phenopackets.json
    entrypoint: ["/app/katsu_entrypoint.sh"]
    ports:
      - "8000:8000"
    depends_on:
      - db-katsu
      - opa
    environment:
      POSTGRES_HOST: "db-katsu"
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ${KATSU_POSTGRES_DB}
      POSTGRES_USER: ${KATSU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KATSU_POSTGRES_PASSWORD}
      CANDIG_OPA_URL: http://opa:8181

  relay:
    build:
      context: ${RELAY_DIR}
      target: builder
    container_name: relay
    ports:
      - 3006:3000
    volumes:
      - ${RELAY_DIR}:/build
      - /build/bin/
    entrypoint: ["sh", "./init.sh"]
    environment:
      SHARED_KEY: ${SHARED_KEY}

  opa:
    image: openpolicyagent/opa:latest
    container_name: opa
    ports:
      - "8181:8181"
    entrypoint: ["/opa", "run", "--server", "--log-level", "debug"]
    
volumes:
  rems-db-data:
  katsu-db-data:
  consents-db-data:
