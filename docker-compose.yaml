version: "3.7"

services:
  db-consents:
    # Use postgres 11.7 image to match stable postgres-client debian
    image: "postgres:11.7-alpine"
    environment:
      POSTGRES_DB: ${CONSENTS_POSTGRES_DB}
      POSTGRES_USER: ${CONSENTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSENTS_POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - consents-db-data:/var/lib/postgresql/data/
  consents:
    build:
      context: ${CONSENTS_DIR}
      dockerfile: ./docker/test.Dockerfile
      target: consents
      args:
        - API_PATH=${CONSENTS_PROJECT_ROOT}/consents-service/api 
        - SWAGGERFILE=${CONSENTS_PROJECT_ROOT}/swagger.yaml   
    environment:
      POSTGRES_DB: ${CONSENTS_POSTGRES_DB}
      POSTGRES_USER: ${CONSENTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CONSENTS_POSTGRES_PASSWORD}
      POSTGRES_HOST: "db-consents"
      POSTGRES_PORT: 5432
      GOPATH: ${GOPATH}
      APP_PATH: ${CONSENTS_PROJECT_ROOT}/consents-service
    depends_on:
      - db-consents
    ports:
      - "3005:3005"

  pp-keycloak:
    build:
      context: ${PARTICIPANT_PORTAL_KEYCLOAK_DIR}
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "8080:8080"
  pp-react:
    build:
      context: ${PARTICIPANT_PORTAL_REACT_DIR}
    ports:
      - "3003:3000"
    volumes:
      - ${PARTICIPANT_PORTAL_REACT_DIR}:/app
      - /app/node_modules

  db-rems:
    image: postgres:9.6
    environment:
      POSTGRES_USER: rems
      POSTGRES_PASSWORD: remspassword
    mem_reservation: 30m
    mem_limit: 150m
    ports:
      - "5433:5432"
    volumes:
      - rems-db-data:/var/lib/postgresql/data
  rems:
    image: cscfi/rems
    mem_reservation: 200m
    mem_limit: 500m
    ports:
      - "3001:3000"
    volumes:
      - ./services/rems/simple-config.edn:/rems/config/config.edn
    depends_on:
      - db-rems
    
  rp-keycloak:
    build:
      context: ${RESEARCHER_PORTAL_KEYCLOAK_DIR}
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "3002:8080"
  rp-react:
    build:
      context: ${RESEARCHER_PORTAL_REACT_DIR}
    ports:
      - "3004:3000"
    volumes:
      - ${RESEARCHER_PORTAL_REACT_DIR}:/app
      - /app/node_modules

  db-katsu:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${KATSU_POSTGRES_DB}
      POSTGRES_USER: ${KATSU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KATSU_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - katsu-db-data:/var/lib/postgresql/data
  katsu:
    image: candig/chord-metadata:v1.0.0
    volumes:
      - ./services/katsu/katsu_entrypoint.sh:/app/katsu_entrypoint.sh
    entrypoint: ["/app/katsu_entrypoint.sh"]
    ports:
      - "8000:8000"
    depends_on:
      - db-katsu
    environment:
      POSTGRES_HOST: "db-katsu"
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ${KATSU_POSTGRES_DB}
      POSTGRES_USER: ${KATSU_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KATSU_POSTGRES_PASSWORD}

volumes:
  rems-db-data:
  katsu-db-data:
  consents-db-data: